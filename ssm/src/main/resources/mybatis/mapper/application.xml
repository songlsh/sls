<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <context:component-scan base-package="com.spring_mybatis.test" use-default-filters="true">

        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:property-placeholder location="classpath:db.properties"/>
    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${jdbc_driveClass}"/>
        <property name="jdbcUrl" value="${jdbc_url}"/>
        <property name="user" value="${jdbc_username}"/>
        <property name="password" value="${jdbc_password}"/>
    </bean>
    <!--    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"-->
<!--          init-method="init" destroy-method="close">-->
<!--        <property name="url" value="${jdbc_url}" />-->
<!--        <property name="username" value="${jdbc_username}" />-->
<!--        <property name="password" value="${jdbc_password}" />-->
<!--        <property name="driverClassName" value="${jdbc_driveClass}"/>-->

<!--        &lt;!&ndash; 初始化连接大小 &ndash;&gt;-->
<!--        <property name="initialSize" value="0" />-->
<!--        &lt;!&ndash; 连接池最大使用连接数量 &ndash;&gt;-->
<!--        <property name="maxActive" value="20" />-->
<!--        &lt;!&ndash; 连接池最大空闲 &ndash;&gt;-->
<!--        <property name="maxIdle" value="20" />-->
<!--        &lt;!&ndash; 连接池最小空闲 &ndash;&gt;-->
<!--        <property name="minIdle" value="0" />-->
<!--        &lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;-->
<!--        <property name="maxWait" value="60000" />-->

<!--        &lt;!&ndash; <property name="poolPreparedStatements" value="true" /> <property-->
<!--            name="maxPoolPreparedStatementPerConnectionSize" value="33" /> &ndash;&gt;-->

<!--        <property name="validationQuery" value="${validationQuery}" />-->
<!--        <property name="testOnBorrow" value="false" />-->
<!--        <property name="testOnReturn" value="false" />-->
<!--        <property name="testWhileIdle" value="true" />-->

<!--        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
<!--        <property name="timeBetweenEvictionRunsMillis" value="60000" />-->
<!--        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
<!--        <property name="minEvictableIdleTimeMillis" value="25200000" />-->

<!--        &lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;-->
<!--        <property name="removeAbandoned" value="true" />-->
<!--        &lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;-->
<!--        <property name="removeAbandonedTimeout" value="1800" />-->
<!--        &lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
<!--        <property name="logAbandoned" value="true" />-->

<!--        &lt;!&ndash; 监控数据库 &ndash;&gt;-->
<!--        &lt;!&ndash; <property name="filters" value="stat" /> &ndash;&gt;-->
<!--        <property name="filters" value="mergeStat" />-->
<!--    </bean>-->

    <!-- spring的事物管理器 -->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--启动注解式的事物管理    -->
<!--    <tx:annotation-driven transaction-manager="transactionManager"/>-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 配置sqlsessionfactory   -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

    <!--mapper sql映射文件位置 -->
        <property name="mapperLocations" value="classpath:mybatis/mapper/EmployeeDao.xml"/>

        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
<!--                    <property name="properties">-->
<!--                        <value>-->
<!--                            　helperDialect=mysql-->
<!--                        </value>-->
<!--                    </property>-->
                </bean>
            </array>
        </property>
    </bean>


    <!--配置一个批量处理的sqlsession    -->
    <bean class="org.mybatis.spring.SqlSessionTemplate" id="sessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sessionFactoryBean"/>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>
    <!-- 存放sql对应的接口文件包   -->
    <mybatis-spring:scan base-package="com.spring_mybatis.test.dao"/>
</beans>