<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.test.dao.EmpMapDaoDynamic">

    <cache></cache>

    <resultMap id="iflabel" type="com.mybatis.test.bean.Employee">
        <id column="id" property="id"/>
        <result column="name" property="empname"/>
        <result column="general" property="general"/>
        <result column="email" property="email"/>
        <association property="depart" select="mydepartment" column="deptid" fetchType="lazy"/>
    </resultMap>
    <!--测试if标签和where 标签 的使用 ognl-->
    <!--where 1=1-->
    <select id="findObject" resultMap="iflabel">
        select id,name ,email,general,deptid from tb_emp

        <where>
            <if test="id!=null">
                and id =#{id}
            </if>
            <if test="name!=null and name != ''">
               and name = #{name}
            </if>
            <if test="email!=null">
               and  email = #{email}
            </if>
        </where>
    </select>

    <!--测试choose标签的使用
        choose when otherwise 标签的使用类似于switch case default的使用
                                      如果第一个满足就不会走下面的判断了
    ognl-->
    <select id="findOneObject" resultMap="iflabel">
        select id,name ,email,general,deptid from tb_emp
        <where>
            <choose>
                <when test="id!=null">
                    id =#{id}
                </when>
                <when test="name!=null and name != ''">
                   name = #{name}
                </when>
                <when test="email!=null">
                      email = #{email}
                </when>
                <otherwise>
                      general = 1
                </otherwise>
            </choose>

        </where>
    </select>


<!--  使用 set if 标签  -->
  <update id="modifyEmp">
      update tb_emp
      <set>
          <if test="name!=null and name != ''">
              name = #{name}
          </if>
          <if test="email!=null">
              email = #{email}
          </if>
      </set>
      <where>
          <if test="id!=null">
              id=#{id}
          </if>
      </where>

  </update>


<!--使用foreach标签查询
 其中collection 指定的为传入的集合参数可以用@param来设置（List对象默认用list代替作为键，数组对象有array代替作为键，Map对象没有默认的键。）
    item指定的为所需要的传递集合里面的值
    separator 为每个值之间的分割符
    open 为前
    close 为结束
    foreach标签里面用  #{item指定的值}来进行判定
 -->
    <select id="findList" parameterType="java.util.Set" resultMap="iflabel">

        select id,name ,email,general,deptid from tb_emp
        <where>
          <foreach collection="cos" item="items" separator="," open="id in (" close=")">
              #{items}
          </foreach>
        </where>
    </select>


<!--mysql 里面进行批量的添加  也可进行批量的修改和删除-->
<insert id="addObjectList" parameterType="list">
    insert into tb_emp(name ,email,general,deptid) values
    <foreach collection="list" item="lists" separator=",">
        (#{lists.empname},#{lists.email},#{lists.general},#{lists.depart.id})
    </foreach>
</insert>

<!--    -->

























    <resultMap id="findPro" type="com.mybatis.test.bean.Employee">
        <id column="id" property="id"/>
        <result column="name" property="empname"/>
        <result column="general" property="general"/>
        <result column="email" property="email"/>
    </resultMap>
    <!--    returnMapObjects-->
    <select id="findById" resultMap="findPro" >
        <!-- select id,name empname,email,general from tb_emp where name like concat('%',#{name},'%')-->
        select id,name ,email,general from tb_emp where id = #{id}
    </select>





    <resultMap id="mydept" type="com.mybatis.test.bean.Employee">
        <id column="id" property="id"/>
        <result column="name" property="empname"/>
        <result column="general" property="general"/>
        <result column="email" property="email"/>
        <association property="depart" javaType="com.mybatis.test.bean.Department">
            <id column="did" property="id"/>
            <result column="deptName" property="deptName"/>
            <result column="location" property="location"/>
        </association>
    </resultMap>
    <!--    findObjLoc

        第一种 利用depart 属性、
              <result column="deptName" property="depart.deptName"/>
              <result column="location" property="depart.location"/>
        第二种 利用association 的property 和javaType
         <association property="depart" javaType="com.mybatis.test.bean.Department">
                <id column="did" property="id"/>
                <result column="deptName" property="deptName"/>
                <result column="location" property="location"/>
        </association>

        第三种 利用association 的级联查询

    -->
    <select id="findObjLoc" resultMap="mydept" >
        <!-- select id,name empname,email,general from tb_emp where name like concat('%',#{name},'%')-->
        select e.id id, e.name name,e.email email ,e.general general,e.deptid did,
                 d.dept_name deptName,d.location location from tb_emp e join tb_dept d on e.deptid = d.id where e.id = #{id}
    </select>



    <resultMap id="mySeparate" type="com.mybatis.test.bean.Employee">
        <id column="id" property="id"/>
        <result column="name" property="empname"/>
        <result column="general" property="general"/>
        <result column="email" property="email"/>
        <association property="depart" select="mydepartment" column="did" fetchType="lazy"/>
    </resultMap>
        <!--    findSeparate
           分布式加载 方式 指明二级查询对象 id  的具体位置 利用select =>namespace+id
           可以进行延迟加载 利用fetchType  指明  lazy 为延迟加载  eager 为迅速加载
        -->
    <select id="findSeparate" resultMap="com.mybatis.test.dao.EmpReulutMapDao.mySeparate" >
        <!-- select id,name empname,email,general from tb_emp where name like concat('%',#{name},'%')-->
        select e.id id, e.name name,e.email email ,e.general general,e.deptid did from tb_emp e where e.id = #{id}
    </select>

    <select id="mydepartment" resultType="com.mybatis.test.bean.Department">

        select id,dept_name deptName,location from tb_dept where id = #{did}
    </select>
</mapper>